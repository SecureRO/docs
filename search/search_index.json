{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Getting Started","text":""},{"location":"#general-usage-as-aar-file","title":"General usage as <code>.aar</code> file","text":""},{"location":"#including-the-dependency","title":"Including the dependency","text":"<p>Include the following dependencies in your application <code>build.gradle</code> file</p> <pre><code>dependencies {\n// ... your dependencies\n\n// Collector dependencies\nimplementation 'com.google.code.gson:gson:2.10.1'  \nimplementation 'com.google.android.gms:play-services-location:21.0.1'  \nimplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4'  \nimplementation 'com.squareup.okhttp3:okhttp:4.11.0'  \nimplementation 'com.squareup.moshi:moshi-kotlin:1.14.0'  \nimplementation 'com.google.android.gms:play-services-safetynet:18.0.1'  \nimplementation 'com.google.guava:guava:31.0.1-jre'  \n\n// Optional Huawei location dependency\nimplementation 'com.huawei.hms:location:6.12.0.300'  \n\n// Optional Play Integrity dependency\nimplementation 'com.google.android.play:integrity:1.4.0'\n\n// Collector dependency\nimplementation files('libs/collector-release.aar')\n}\n</code></pre> <p>The collector uses, but doesn't require the following permissions in the <code>AndroidManifest.xml</code>. Please make sure to include the ones you think are appropriate for your application Collector manifest permissions and usage</p>"},{"location":"#usage-in-code","title":"Usage in code","text":"<pre><code>class MyApp: Application() {\n    private val BASE_URL = \"base url provided by us\"\n    private val CID = \"customer id provided by us\"\n\n    fun onCreate() {\n        // It is preferred that the collector SDK is initialized from the Application class, but it can be initialized from any place before the SDK is used\n        val collector = CollectorAgent.initialize(this, BASE_URL, CID)\n\n        // mainly used to print the logs into logcat for debugging\n        collector.isDebug = false\n    }\n}\n</code></pre> <pre><code>val collector = CollectorAgent.get()\n\n// call when the user session id is updated or available\ncollector.setCSID(CSID)\n\n// call when the user id is updated or available\ncollector.setUserID(UserID)\n\n// call when the state of the application is changed. Different contexts can trigger different state updates inside the SDK\ncollector.sendContext(\"CONTEXT\")\n</code></pre>"},{"location":"#play-integrity-integration","title":"Play Integrity Integration","text":"<p>The SDK is using the play integrity to utilize built in android security features. To use those features you have to configure the Play Integrity on the platform, which would include sharing the cloud project number and creating.</p> <p>To retrieve that info you have to go to your firebase console and open the project settings. https://console.firebase.google.com/ The project number will be under the <code>General</code> tab </p> <p>We also need a service account private key to make requests to google on your behalf for retrieving additional information regarding suspicious activity on the device. You can generate the private key from firebase.</p> <p></p> <p>Then you'll have to enable Play Integrity from the google console https://console.cloud.google.com/marketplace/product/google/playintegrity.googleapis.com for your selected project.</p>"},{"location":"manifest/","title":"Manifest permissions and usage","text":"<pre><code>&lt;uses-permission android:name=\"android.permission.INTERNET\" /&gt;\n</code></pre> <p>The SDK is making network requests</p> <pre><code>&lt;uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\" /&gt;\n</code></pre> <p>The SDK is collecting information about currently connected networks</p> <pre><code>&lt;uses-permission android:name=\"android.permission.ACCESS_WIFI_STATE\" /&gt;\n</code></pre> <p>The SDK is collecting information about current connected networks including wifi information</p> <pre><code>&lt;uses-permission  \n    android:name=\"android.permission.ACCESS_COARSE_LOCATION\"  \n    tools:node=\"remove\" /&gt;  \n&lt;uses-permission  \n    android:name=\"android.permission.ACCESS_FINE_LOCATION\"  \n    tools:node=\"remove\" /&gt;\n</code></pre> <p>The SDK is collecting device location information. It is not forced on the client and will not be merged into the consumer <code>AndroidManifest.xml</code> </p> <pre><code>&lt;uses-permission  \n    android:name=\"android.permission.BLUETOOTH_CONNECT\"  \n    tools:node=\"remove\" /&gt;  \n&lt;uses-permission  \n    android:name=\"android.permission.BLUETOOTH\"  \n    android:maxSdkVersion=\"30\"  \n    tools:node=\"remove\" /&gt;  \n&lt;uses-permission  \n    android:name=\"android.permission.BLUETOOTH_ADMIN\"  \n    android:maxSdkVersion=\"30\"  \n    tools:node=\"remove\" /&gt;\n</code></pre> <p>The SDK collects bluetooth status and devices information. It is not forced on the client and will not be merged into the consumer <code>AndroidManifest.xml</code></p> <pre><code>&lt;uses-permission  \n    android:name=\"android.permission.QUERY_ALL_PACKAGES\"  \n    tools:ignore=\"QueryAllPackagesPermission\"  \n    tools:node=\"remove\" /&gt;\n</code></pre> <p>The SDK collects installed applications looking for malware or anything suspicious that can be used to trick the bank customer to share sensitive information. It is not forced on the client and will not be merged into the consumer <code>AndroidManifest.xml</code></p> <pre><code>&lt;uses-permission android:name=\"android.permission.READ_PHONE_NUMBERS\"  \n    tools:node=\"remove\"/&gt;  \n&lt;uses-permission android:name=\"android.permission.READ_SMS\"  \n    tools:node=\"remove\"/&gt;  \n&lt;uses-permission android:name=\"android.permission.READ_PRIVILEGED_PHONE_STATE\"  \n    tools:ignore=\"ProtectedPermissions\"  \n    tools:node=\"remove\"/&gt;\n</code></pre> <p>The SDK tries to read carrier and phone information, including signal levels, battery levels, amount of sim cards etc. It is not forced on the client and will not be merged into the consumer <code>AndroidManifest.xml</code></p> <pre><code>&lt;uses-permission android:name=\"android.permission.HIDE_OVERLAY_WINDOWS\"  \n    tools:node=\"remove\"/&gt;\n</code></pre> <p>The SDK allows to control when overlays are allowed to be displayed over the application. This permission is required to be able to control that. It is not forced on the client and will not be merged into consumer <code>AndroidManifest.xml</code></p>"}]}